// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stock.DataAcess.Data;

#nullable disable

namespace Stock.DataAcess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240802102742_createtable")]
    partial class createtable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Stock.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action",
                            Quantity = 0.0
                        },
                        new
                        {
                            Id = 2,
                            Name = "SciFi",
                            Quantity = 0.0
                        },
                        new
                        {
                            Id = 3,
                            Name = "History",
                            Quantity = 0.0
                        });
                });

            modelBuilder.Entity("Stock.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "it is a good pen",
                            Name = "Pen",
                            Price = 50m
                        },
                        new
                        {
                            Id = 2,
                            Description = "it is a good pen",
                            Name = "Pensil",
                            Price = 50m
                        },
                        new
                        {
                            Id = 3,
                            Description = "it is a good pen",
                            Name = "Pepshi",
                            Price = 50m
                        },
                        new
                        {
                            Id = 4,
                            Description = "it is a good pen",
                            Name = "banana",
                            Price = 50m
                        },
                        new
                        {
                            Id = 5,
                            Description = "it is a good pen",
                            Name = "mango",
                            Price = 50m
                        },
                        new
                        {
                            Id = 6,
                            Description = "it is a good pen",
                            Name = "applr",
                            Price = 50m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
